// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.Storing;

namespace PizzaBox.Storing.Migrations
{
    [DbContext(typeof(PizzaBoxContext))]
    partial class PizzaBoxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MenuStore", b =>
                {
                    b.Property<long>("MenusEntityId")
                        .HasColumnType("bigint");

                    b.Property<long>("StoresEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("MenusEntityId", "StoresEntityId");

                    b.HasIndex("StoresEntityId");

                    b.ToTable("MenuStore");

                    b.HasData(
                        new
                        {
                            MenusEntityId = 1L,
                            StoresEntityId = 1L
                        },
                        new
                        {
                            MenusEntityId = 2L,
                            StoresEntityId = 1L
                        },
                        new
                        {
                            MenusEntityId = 3L,
                            StoresEntityId = 2L
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Abstracts.APizzaModel", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AToppingListEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CrustEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SizeEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("EntityId");

                    b.HasIndex("AToppingListEntityId");

                    b.HasIndex("CrustEntityId");

                    b.HasIndex("OrderEntityId");

                    b.HasIndex("SizeEntityId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Crust", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pricing")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.ToTable("Crusts");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "Thin",
                            Pricing = 1.00m
                        },
                        new
                        {
                            EntityId = 2L,
                            Name = "Regular",
                            Pricing = 1.50m
                        },
                        new
                        {
                            EntityId = 3L,
                            Name = "Thick",
                            Pricing = 2.00m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Menu", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Item = "MeatEaters Pizza"
                        },
                        new
                        {
                            EntityId = 2L,
                            Item = "Vegan Pizza"
                        },
                        new
                        {
                            EntityId = 3L,
                            Item = "Supreme Pizza"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StoreEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("EntityId");

                    b.HasIndex("StoreEntityId");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Size", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pricing")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "Small",
                            Pricing = 3.00m
                        },
                        new
                        {
                            EntityId = 2L,
                            Name = "Medium",
                            Pricing = 3.50m
                        },
                        new
                        {
                            EntityId = 3L,
                            Name = "Large",
                            Pricing = 4.00m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "PizzaHut"
                        },
                        new
                        {
                            EntityId = 2L,
                            Name = "Dominos"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Topping", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pricing")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "Pepperoni",
                            Pricing = 2.00m
                        },
                        new
                        {
                            EntityId = 2L,
                            Name = "Italian Sausage",
                            Pricing = 2.00m
                        },
                        new
                        {
                            EntityId = 3L,
                            Name = "Meatball",
                            Pricing = 2.00m
                        },
                        new
                        {
                            EntityId = 4L,
                            Name = "Mushroom",
                            Pricing = 1.50m
                        },
                        new
                        {
                            EntityId = 5L,
                            Name = "Red Onions",
                            Pricing = 1.50m
                        },
                        new
                        {
                            EntityId = 6L,
                            Name = "Black Olives",
                            Pricing = 1.50m
                        },
                        new
                        {
                            EntityId = 7L,
                            Name = "Green Bell Peppers",
                            Pricing = 1.50m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.ToppingList", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("Topping1EntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Topping2EntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Topping3EntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Topping4EntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Topping5EntityId")
                        .HasColumnType("bigint");

                    b.HasKey("EntityId");

                    b.HasIndex("Topping1EntityId");

                    b.HasIndex("Topping2EntityId");

                    b.HasIndex("Topping3EntityId");

                    b.HasIndex("Topping4EntityId");

                    b.HasIndex("Topping5EntityId");

                    b.ToTable("ToppingLists");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.User", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("SelectedStoreEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("EntityId");

                    b.HasIndex("SelectedStoreEntityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MenuStore", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenusEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.Store", null)
                        .WithMany()
                        .HasForeignKey("StoresEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Abstracts.APizzaModel", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.ToppingList", "AToppingList")
                        .WithMany()
                        .HasForeignKey("AToppingListEntityId");

                    b.HasOne("PizzaBox.Domain.Models.Crust", "Crust")
                        .WithMany()
                        .HasForeignKey("CrustEntityId");

                    b.HasOne("PizzaBox.Domain.Models.Order", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderEntityId");

                    b.HasOne("PizzaBox.Domain.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeEntityId");

                    b.Navigation("AToppingList");

                    b.Navigation("Crust");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Store", null)
                        .WithMany("Orders")
                        .HasForeignKey("StoreEntityId");

                    b.HasOne("PizzaBox.Domain.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.ToppingList", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Topping", "Topping1")
                        .WithMany()
                        .HasForeignKey("Topping1EntityId");

                    b.HasOne("PizzaBox.Domain.Models.Topping", "Topping2")
                        .WithMany()
                        .HasForeignKey("Topping2EntityId");

                    b.HasOne("PizzaBox.Domain.Models.Topping", "Topping3")
                        .WithMany()
                        .HasForeignKey("Topping3EntityId");

                    b.HasOne("PizzaBox.Domain.Models.Topping", "Topping4")
                        .WithMany()
                        .HasForeignKey("Topping4EntityId");

                    b.HasOne("PizzaBox.Domain.Models.Topping", "Topping5")
                        .WithMany()
                        .HasForeignKey("Topping5EntityId");

                    b.Navigation("Topping1");

                    b.Navigation("Topping2");

                    b.Navigation("Topping3");

                    b.Navigation("Topping4");

                    b.Navigation("Topping5");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.User", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Store", "SelectedStore")
                        .WithMany()
                        .HasForeignKey("SelectedStoreEntityId");

                    b.Navigation("SelectedStore");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
